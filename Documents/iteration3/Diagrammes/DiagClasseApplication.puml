@startuml
class tralleno.Vues.VueTableau {
- ModeleBureau modeleBureau
+ void actualiser(Sujet)
}
class tralleno.Controleurs.ControlGlobal {
- ModeleBureau modele
+ void handle(ActionEvent)
}
class tralleno.serialisation.MainDeserialisation {
+ {static} void main(String[])
}
abstract class tralleno.Taches.Tache {
# Section sectionParente
# String titre
# int id
# LocalDate dateDebut
# int duree
# String description
+ {static} int IDVALIDACTUEL
+ Section getSectionParente()
+ void setSectionParente(Section)
+ String getTitre()
+ void setTitre(String)
+ int getId()
+ void setId(int)
+ LocalDate getDateDebut()
+ void setDateDebut(LocalDate)
+ LocalDate getDateFin()
+ void setDateFin(LocalDate)
+ int getDuree()
+ void setDuree(int)
+ String getDescription()
+ void setDescription(String)
+ int compareTo(Tache)
+ String toString()
}
class tralleno.Vues.VueBarreActions {
+ {static} int TABLEAU
+ {static} int LISTE
+ {static} int GANTT
}
class tralleno.serialisation.MainSerialisation {
+ {static} void main(String[])
}
class tralleno.Taches.TacheFille {
}
class tralleno.Controleurs.Sections.ControlSupprimerSection {
- ModeleBureau modeleBureau
- Section section
- Stage fenetre
+ void handle(MouseEvent)
}
class tralleno.Controleurs.ControlDragAndDrop {
- ModeleBureau modele
+ void handle(ActionEvent)
}
class tralleno.Controleurs.Taches.ControlModifTache {
- ModeleBureau modeleBureau
- Tache tacheAModifier
+ void handle(MouseEvent)
}
interface tralleno.Vues.Observateur {
+ void actualiser(Sujet)
}
class tralleno.Controleurs.Taches.ControlSupprimerTache {
- ModeleBureau modeleBureau
- Tache tacheASupprimer
- Stage fenetre
+ void handle(MouseEvent)
}
interface tralleno.Modele.Sujet {
+ void enregistrerObservateur(Observateur)
+ void supprimerObservateur(Observateur)
+ void notifierObservateurs()
}
class tralleno.Vues.VueSection {
+ void actualiser(Sujet)
}
class tralleno.Vues.VueGantt {
+ void actualiser(Sujet)
}
class tralleno.Controleurs.ControlNavVues {
- ModeleBureau modele
+ void handle(ActionEvent)
}
class tralleno.Vues.VueTache {
+ void actualiser(Sujet)
}
class tralleno.Modele.ModeleBureau {
- List<Observateur> observateurs
- List<Section> sections
- Map<Tache,List<Tache>> dependances
- Tache tacheCourante
- Section sectionCourante
- {static} int IDTACHEACTUELLE
- {static} int IDSECTIONACTUELLE
- List<Tache> tachesArchivees
- List<Section> sectionsArchivees
+ Section getSectionCourante()
+ void setSectionCourante(Section)
+ void setTachesArchivees(List<Tache>)
+ void setSectionsArchivees(List<Section>)
+ List<Tache> getTachesArchivees()
+ void ajouterSection(Section)
+ void ajouterTache(Section)
+ Section getSection(String)
+ Section getSection(Tache)
+ List<String> getNomSections()
+ void ajouterDependance(Tache)
+ void ajouterDependances(List<Tache>)
+ void modifierNomSection(Section,String)
+ void changerSection(Section)
+ List<Tache> getDependancesTache()
+ List<Section> getSections()
+ void setSections(List<Section>)
+ List<Tache> getTaches()
+ Map<Tache,List<Tache>> getDependances()
+ void setDependances(Map<Tache,List<Tache>>)
+ Tache getTacheCourante()
+ void setTacheCourante(Tache)
+ boolean isArchivee_Tache(Tache)
+ boolean isArchivee_Section(Section)
+ boolean isSupprimee_Section(Section)
+ void supprimerSection()
+ void supprimerTache(Tache)
+ void archiverTache(Tache)
+ void archiverSection(Section)
+ void ajouterTacheDansSection(Tache,Section)
+ void restaurerTache(Tache)
+ void restaurerSection(Section)
+ List<Observateur> getObservateurs()
+ void setObservateurs(List<Observateur>)
+ {static} int getIDSECTIONACTUELLE()
+ {static} int getIDTACHEACTUELLE()
+ void enregistrerObservateur(Observateur)
+ void supprimerObservateur(Observateur)
+ void notifierObservateurs()
+ List<Section> getSectionsArchivees()
}
class tralleno.MainSerialiser {
+ {static} ModeleBureau modeleBureau
+ {static} String chemin
+ {static} void loaderModele(String)
+ void start(Stage)
+ {static} void serialiser()
+ {static} void main(String[])
}
class tralleno.test.test {
+ {static} void main(String[])
}
class tralleno.Vues.VueListe {
+ void actualiser(Sujet)
}
class tralleno.Controleurs.ControlSection {
- ModeleBureau modele
+ void handle(ActionEvent)
}
class tralleno.Section.Section {
- List<Tache> taches
- String nom
- int id
+ void ajouterTache(Tache)
+ void supprimerTache(Tache)
+ List<Tache> getTaches()
+ void setTaches(List<Tache>)
+ String getNom()
+ void setNom(String)
+ int getId()
+ void setId(int)
+ String toString()
}
class tralleno.Taches.TacheMere {
# List<Tache> sousTaches
+ void ajouterSousTache(Tache)
+ void supprimerSousTache(Tache)
+ List<Tache> getSousTaches()
+ void setSousTaches(List<Tache>)
}
class tralleno.MainApp {
+ void start(Stage)
+ {static} void main(String[])
}
class tralleno.Controleurs.Sections.ControlCreerSection {
- ModeleBureau modeleBureau
+ void handle(MouseEvent)
}
class tralleno.Controleurs.Sections.ControlModifSection {
- ModeleBureau modeleBureau
- Section section
+ void handle(MouseEvent)
}
class tralleno.Controleurs.Taches.ControlCreerTache {
- ModeleBureau modeleBureau
+ void handle(MouseEvent)
}


tralleno.Vues.Observateur <|.. tralleno.Vues.VueTableau
java.io.Serializable <|.. tralleno.Vues.VueTableau
javafx.scene.layout.HBox <|-- tralleno.Vues.VueTableau
javafx.event.EventHandler <|.. tralleno.Controleurs.ControlGlobal
tralleno.Taches.Comparable <|.. tralleno.Taches.Tache
java.io.Serializable <|.. tralleno.Taches.Tache
javafx.scene.layout.HBox <|-- tralleno.Vues.VueBarreActions
java.io.Serializable <|.. tralleno.Taches.TacheFille
tralleno.Taches.Tache <|-- tralleno.Taches.TacheFille
javafx.event.EventHandler <|.. tralleno.Controleurs.Sections.ControlSupprimerSection
javafx.event.EventHandler <|.. tralleno.Controleurs.ControlDragAndDrop
javafx.event.EventHandler <|.. tralleno.Controleurs.Taches.ControlModifTache
javafx.event.EventHandler <|.. tralleno.Controleurs.Taches.ControlSupprimerTache
tralleno.Vues.Observateur <|.. tralleno.Vues.VueSection
javafx.scene.layout.VBox <|-- tralleno.Vues.VueSection
tralleno.Vues.Observateur <|.. tralleno.Vues.VueGantt
javafx.event.EventHandler <|.. tralleno.Controleurs.ControlNavVues
tralleno.Vues.Observateur <|.. tralleno.Vues.VueTache
javafx.scene.layout.VBox <|-- tralleno.Vues.VueTache
tralleno.Modele.Sujet <|.. tralleno.Modele.ModeleBureau
java.io.Serializable <|.. tralleno.Modele.ModeleBureau
javafx.application.Application <|-- tralleno.MainSerialiser
tralleno.Vues.Observateur <|.. tralleno.Vues.VueListe
javafx.event.EventHandler <|.. tralleno.Controleurs.ControlSection
java.io.Serializable <|.. tralleno.Section.Section
java.io.Serializable <|.. tralleno.Taches.TacheMere
tralleno.Taches.Tache <|-- tralleno.Taches.TacheMere
javafx.application.Application <|-- tralleno.MainApp
javafx.event.EventHandler <|.. tralleno.Controleurs.Sections.ControlCreerSection
javafx.event.EventHandler <|.. tralleno.Controleurs.Sections.ControlModifSection
javafx.event.EventHandler <|.. tralleno.Controleurs.Taches.ControlCreerTache
@enduml